plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-android-extensions'
    id 'kotlin-kapt'
    id 'com.google.protobuf'
    id 'io.fabric'
}

def getGitHash = { ->
    def os = System.getProperty("os.name").toLowerCase()
    def stdout = new ByteArrayOutputStream()
    if (!os.contains("windows")) {
        exec {
            executable "/bin/sh"
            args "-c", "echo -n `git rev-list HEAD | wc -l | sed 's/^[ ^t]*//'`"
            standardOutput = stdout;
        }
    } else {
        exec {
            executable "cmd"
            args "/c", "git rev-list HEAD | find /c /v \"\""
            standardOutput = stdout;
        }
//        stdout = revision as String
//        revision = revision.trim()
    }
    return stdout.toString().trim()
}

static def getReleaseTime() {
    return new Date().format("yyyyMMddHHmmss", TimeZone.getTimeZone("Asia/Shanghai"))
}

android {
    compileSdkVersion versions.sdk_compile
    buildToolsVersion versions.build_tools

    defaultConfig {
        applicationId "com.mynews.app.news"
        minSdkVersion versions.sdk_min
        targetSdkVersion versions.sdk_target
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        ndk {
            abiFilters "armeabi-v7a", "arm64-v8a", "x86", "x86_64"
        }
        kapt {
            arguments {
                arg('eventBusIndex', app.id + ".processor.EventBusIndex")
            }
        }
    }

    signingConfigs {
        release {
            keyAlias 'aaaaaa'
            keyPassword 'aaaaaa'
            storeFile file('aaaaaa.jks')
            storePassword 'aaaaaa'
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.release
            multiDexEnabled true
            ext.enableCrashlytics = false
        }
        beta {
            debuggable = false
            multiDexEnabled true
            shrinkResources true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        release {
            signingConfig signingConfigs.release
            multiDexEnabled true
            shrinkResources true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/services/javax.annotation.processing.Processor'
        exclude 'lib/mips/libtobEmbedEncrypt.so'
        exclude 'lib/mips64/libtobEmbedEncrypt.so'
        exclude 'lib/x86/libtobEmbedEncrypt.so'
        exclude 'lib/x86_64/libtobEmbedEncrypt.so'
        exclude 'lib/armeabi/libtobEmbedEncrypt.so'
        exclude 'lib/armeabi-v7a/libtobEmbedEncrypt.so'
        exclude 'lib/arm64-v8a/libtobEmbedEncrypt.so'

        pickFirst 'lib/armeabi-v7a/libRSSupport.so'
        pickFirst 'lib/arm64-v8a/libRSSupport.so'
        pickFirst 'lib/x86_64/libRSSupport.so'
        pickFirst 'lib/x86/libRSSupport.so'
        pickFirst 'lib/arm64-v8a/librsjni.so'
        pickFirst 'lib/x86/librsjni.so'
        pickFirst 'lib/x86_64/librsjni.so'
        pickFirst 'lib/armeabi-v7a/librsjni.so'
        pickFirst 'lib/x86_64/librsjni_androidx.so'
        pickFirst 'lib/armeabi-v7a/librsjni_androidx.so'
        pickFirst 'lib/x86/librsjni_androidx.so'
        pickFirst 'lib/arm64-v8a/librsjni_androidx.so'
        pickFirst 'lib/x86_64/libc++_shared.so'
        pickFirst 'lib/armeabi-v7a/libc++_shared.so'
        pickFirst 'lib/x86/libc++_shared.so'
        pickFirst 'lib/arm64-v8a/libc++_shared.so'
        pickFirst 'lib/armeabi-v7a/libijkplayer.so'
        pickFirst 'lib/x86/libijkplayer.so'
        pickFirst 'lib/arm64-v8a/libijkplayer.so'
        pickFirst 'lib/armeabi-v7a/libijksdl.so'
        pickFirst 'lib/x86/libijksdl.so'
        pickFirst 'lib/arm64-v8a/libijksdl.so'
        pickFirst 'lib/armeabi-v7a/libijkffmpeg.so'
        pickFirst 'lib/x86/libijkffmpeg.so'
        pickFirst 'lib/arm64-v8a/libijkffmpeg.so'
    }
    android.applicationVariants.all { variant ->
        variant.outputs.all {
            outputFileName = "NewsJet_${variant.versionName}_${variant.versionCode}_${variant.name}_${getReleaseTime()}_${getGitHash()}.apk"
        }
        variant.assemble.doLast { assemble ->
            copy {
                from file("${projectDir.path}/${variant.dirName}")
                into "${projectDir.path}/apks/${variant.dirName}"
            }
            delete file("${projectDir.path}/${variant.dirName}")
        }
    }

    androidExtensions {
        experimental = true
    }

    externalNativeBuild {
        cmake {
            path "src/main/cpp/CMakeLists.txt"
        }
    }
}

protobuf {
    protoc {
        artifact = 'com.google.protobuf:protoc:3.6.1'
    }

    generateProtoTasks {
        all().each { task ->
            task.builtins {
                remove java
            }
            task.builtins {
                java {}
            }
        }
    }
}

repositories {
    mavenCentral()
    maven {
//        url 'https://maven.google.com/'
        url 'http://maven.aliyun.com/nexus/content/groups/public/'
    }
    flatDir {
        dirs 'libs'
    }
}

dependencies {

//    implementation "org.jetbrains.kotlin:kotlin-stdlib:$versions.classpath_kotlin"
//    implementation "com.android.support:appcompat-v7:$versions.support"
//    implementation 'com.android.support.constraint:constraint-layout:2.0.4'
//    testImplementation 'junit:junit:4.+'
//    androidTestImplementation 'com.android.support.test:runner:1.0.2'
//    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

    //Base
    implementation fileTree(include: ['*.jar', '*.aar'], dir: 'libs')

    // http request interceptor (Do not change)
    debugImplementation 'com.readystatesoftware.chuck:library:1.1.0'// network packet interceptor
    releaseImplementation 'com.readystatesoftware.chuck:library-no-op:1.1.0'
    betaImplementation 'com.readystatesoftware.chuck:library-no-op:1.1.0'

    //drag and drop linear layout
    implementation 'com.jmedeisis:draglinearlayout:1.1.0'

    //ping library
    implementation 'com.qiniu:android-netdiag:0.1.1'

    implementation 'com.wang.avi:library:2.1.3'
    implementation 'com.pixplicity.easyprefs:library:1.9.0'
    implementation 'com.github.medyo:fancybuttons:1.9.0'
    implementation "com.android.support:design:$versions.support"
    implementation "com.android.support:exifinterface:$versions.support"
    implementation "com.android.support:support-annotations:$versions.support"
    implementation "com.android.support:support-v4:$versions.support"
    implementation "com.android.support:support-v13:$versions.support"
    implementation "com.android.support:appcompat-v7:$versions.support"
//    implementation "com.android.support:support-vector-drawable:$versions.support"
    implementation "com.android.support:gridlayout-v7:$versions.support"
    implementation "com.android.support:mediarouter-v7:$versions.support"
    implementation "com.android.support:cardview-v7:$versions.support"
    implementation "com.android.support:palette-v7:$versions.support"
    implementation "com.android.support:recyclerview-v7:$versions.support"
    implementation "com.android.support:customtabs:$versions.support"
    implementation "com.android.support.constraint:constraint-layout:$versions.constraint_layout"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$versions.classpath_kotlin"
    implementation "com.github.ReactiveX:RxKotlin:$versions.rxkotlin"
    implementation "io.reactivex.rxjava2:rxjava:$versions.rxjava"
    implementation "io.reactivex.rxjava2:rxandroid:$versions.rxandroid"
    implementation "com.trello.rxlifecycle2:rxlifecycle:$versions.rxlifecycle"
    implementation "com.yanzhenjie:permission:$versions.permission"
    implementation "org.jetbrains.anko:anko:$versions.anko"
    implementation "com.android.support:multidex:$versions.multidex"
    implementation "me.majiajie:pager-bottom-tab-strip:$versions.bottom_tab"
    implementation 'com.nex3z:flow-layout:1.2.4'
    //Core
    implementation "com.jakewharton:disklrucache:$versions.disklrucache"
    implementation "com.google.code.gson:gson:$versions.gson"
    implementation "com.squareup.okhttp3:okhttp:$versions.okhttp3"
    implementation "com.squareup.okhttp3:logging-interceptor:$versions.okhttp3"
    implementation "com.squareup.retrofit2:retrofit:$versions.retrofit"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$versions.retrofit"
    implementation "com.squareup.retrofit2:converter-gson:$versions.retrofit"
    implementation "com.squareup.retrofit2:converter-protobuf:$versions.retrofit"
    implementation 'com.google.protobuf:protobuf-java:3.6.1'
    implementation "com.facebook.fresco:fresco:$versions.fresco"
    implementation "com.facebook.fresco:animated-gif:$versions.fresco"
    implementation "com.facebook.fresco:animated-webp:$versions.fresco"
    implementation "com.facebook.fresco:animated-base:$versions.fresco"
    implementation "com.facebook.fresco:webpsupport:$versions.fresco"
    implementation "com.facebook.fresco:imagepipeline-okhttp3:$versions.fresco"
    implementation "jp.co.cyberagent.android.gpuimage:gpuimage-library:$versions.gpuimage"
    implementation "com.davemorrissey.labs:subsampling-scale-image-view:$versions.subsampling"
    implementation "com.github.maskarade.android.orma:orma:$versions.orma"
    implementation "lt.neworld:spanner:$versions.spanner"

    //    implementation "com.eightbitlab:blurview:$versions.blurview"

    //    implementation "com.eightbitlab:supportrenderscriptblur:$versions.blurview_17"

    //Extension
    implementation "me.yokeyword:fragmentation:$versions.fragmentation"

    // implementation "me.yokeyword:fragmentation-swipeback:$versions.fragmentation"
    implementation "eu.davidea:flexible-adapter:$versions.flexible_adapter"

    //    implementation "eu.davidea:flexible-adapter-ui:$versions.flexible_adapter_ui"
    implementation "pl.charmas.android:android-reactive-location2:$versions.location"
    implementation "org.greenrobot:eventbus:$versions.eventbus"
    implementation "com.scwang.smartrefresh:SmartRefreshLayout:$versions.smart_refresh_layout"
    implementation "com.scwang.smartrefresh:SmartRefreshHeader:$versions.smart_refresh_layout"
    implementation "me.everything:overscroll-decor-android:$versions.overscroll"
    implementation "com.github.LuckSiege.PictureSelector:picture_library:$versions.picture_library"
    implementation "com.shuyu:gsyVideoPlayer-java:$versions.gsyVideoPlayer"
    implementation "com.shuyu:GSYVideoPlayer-exo2:$versions.gsyVideoPlayer"

    // implementation "com.shuyu:gsyVideoPlayer-ex_so:$versions.gsyVideoPlayer"
    implementation "com.facebook.android:facebook-share:$versions.facebook"
    implementation "com.facebook.android:facebook-login:$versions.facebook"
    implementation "com.facebook.android:facebook-applinks:$versions.facebook"
    implementation "com.twitter.sdk.android:twitter:$versions.twitter"
//    implementation(name: 'line-sdk-4.0.6', ext: 'aar')
    implementation "com.kongzue.dialog:dialog:$versions.ios_dialog"
    implementation 'com.github.magiepooh:recycler-itemdecoration:1.1.1@aar'
    implementation "com.squareup:seismic:$versions.seismic"

    //Extension-google services
    implementation "com.google.android.gms:play-services-location:$versions.google_play_services_location"
    implementation "com.google.android.gms:play-services-places:$versions.google_play_services_places"
    implementation "com.google.android.gms:play-services-auth:$versions.google_play_services_auth"
    implementation "com.google.firebase:firebase-core:$versions.firebase_core"
    implementation "com.google.firebase:firebase-analytics:$versions.firebase_analytics"
    implementation "com.google.firebase:firebase-messaging:$versions.firebase_messaging"
    implementation "com.google.firebase:firebase-perf:$versions.firebase_perf"
    //    implementation "com.google.firebase:firebase-invites:$versions.google_play_services"

    //Auto
    implementation "com.github.yatatsu:autobundle:$versions.autobundle"
    implementation "nz.bradcampbell:paperparcel:$versions.paperparcel"
    implementation "nz.bradcampbell:paperparcel-kotlin:$versions.paperparcel"
    implementation "com.gu.android:toolargetool:$versions.toolargetool"

    //Debug
    implementation "com.facebook.stetho:stetho:$versions.stetho"
    implementation "com.facebook.stetho:stetho-okhttp3:$versions.stetho"

    //Test
    testImplementation "junit:junit:$versions.junit"
    androidTestImplementation "com.android.support.test:runner:$versions.runner"
    androidTestImplementation "com.android.support.test.espresso:espresso-core:$versions.espresso"
    //Analytics
//    implementation("com.crashlytics.sdk.android:crashlytics:$versions.crashlytics") {
//        transitive = true
//    }
    implementation "com.crashlytics.sdk.android:crashlytics:$versions.crashlytics"
    implementation "com.appsflyer:af-android-sdk:$versions.appsflyer"
    implementation "com.android.installreferrer:installreferrer:$versions.install_referrer"
    implementation "com.umeng.umsdk:common:$versions.umeng_common"
    implementation "com.umeng.umsdk:analytics:$versions.umeng"

    //lottie anim
    implementation "com.airbnb.android:lottie:$versions.lottie"

    //Ads
    implementation "com.google.firebase:firebase-ads:$versions.firebase_ads"
    implementation "com.facebook.android:audience-network-sdk:$versions.facebook_audience_network"
    implementation("com.mopub:mopub-sdk:$versions.mopub") {
        transitive = true
    }
//    implementation "com.vungle:publisher-sdk-android:$versions.vungle"

    //Ads For CHUANSHANJIA
    implementation 'com.google.android.exoplayer:exoplayer:2.9.6'
    implementation(name: 'open_ad_sdk', ext: 'aar')
    implementation 'com.fyber:fairbid-sdk:3.0.1'
    implementation 'com.applovin:applovin-sdk:9.12.0'
    implementation 'com.unity3d.ads:unity-ads:3.4.0'
    configurations {
        compile.exclude module: 'open_ad_sdk'

    }

    //Ads mediation
    implementation "com.google.ads.mediation:facebook:$versions.admob_facebook_mediation"
    implementation "com.google.ads.mediation:mopub:$versions.admob_mopub_mediation"
    implementation "com.mopub.mediation:admob:$versions.mopub_admob_mediation"
    implementation "com.mopub.mediation:facebookaudiencenetwork:$versions.mopub_facebook_mediation"
//    implementation "com.google.ads.mediation:vungle:$versions.admob_vungle_mediation"
//    implementation "com.mopub.mediation:vungle:$versions.mopub_vungle_mediation"

    //processor compiler
    kapt "com.github.yatatsu:autobundle-processor:$versions.autobundle"
    kapt "nz.bradcampbell:paperparcel-compiler:$versions.paperparcel"
    kapt "com.github.maskarade.android.orma:orma-processor:$versions.orma"
    kapt "org.greenrobot:eventbus-annotation-processor:$versions.eventbus_processor"
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.2'
}

/**
 * 警告：这些代码必须在文件的最底部，不要试图移动它们
 */
apply plugin: 'com.google.gms.google-services'